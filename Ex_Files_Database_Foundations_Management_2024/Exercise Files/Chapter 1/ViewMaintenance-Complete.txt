-- Query the new view on the PostgreSQL ServerSELECT     order_id,    order_date,    companyFROM sales.order_details;-- Change the name of a column in the original data tableALTER TABLE sales.customersRENAME COLUMN company TO company_name;-- Note: Renaming a column in SQL Server requires different syntax-- EXEC sp_rename 'sales.customers.company', 'company_name', 'COLUMN';-- Query the view again. Notice that it still works even though column names are changed. PostgreSQL modified the view for us.SELECT     order_id,    order_date,    companyFROM sales.order_details;-- Recreate the view to point to the new column nameDROP VIEW sales.order_details;CREATE VIEW sales.order_details AS SELECT orders.order_id,    order_lines.line_id,    customers.customer_id,    customers.company_name,  -- or use an AS keyword to create a column alias    orders.order_date,    order_lines.sku,    order_lines.quantity,    products.product_name,    products.size,    products.price   FROM sales.customers     JOIN sales.orders ON customers.customer_id = orders.customer_id     JOIN sales.order_lines ON orders.order_id = order_lines.order_id     JOIN inventory.products ON order_lines.sku = products.sku;-- Now the view and table use the same column names againSELECT     order_id,    order_date,    company_nameFROM sales.order_details;